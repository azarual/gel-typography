/*------------------------------------*\
    # TYPE DEMO
\*------------------------------------*/

.gel-type-demo {
    margin-bottom: double($gel-spacing-unit);
    padding-top: double($gel-spacing-unit);
    border-top: 1px solid #dcdcdc;

    &:first-child {
        border-top: 0;
    }
}

.gel-type-demo--body-copy {
    border-top-color: #dbdbdb;
    border-top-width: 2px;
}

/**
 * 1. Just incase this is nested within a bold type class
 * 2. Unset minon if you're using minon
 */
 .gel-type-demo__class {
    margin-bottom: $gel-spacing-unit;
    color: #565656;
    letter-spacing: 0; /* [1] */
    text-transform: none; /* [2] */
}

.gel-type-demo__class-name,
.gel-type-demo__class-html {
    display: inline-block;
    vertical-align: middle;
}

.gel-type-demo__class-name {
    margin-right: $gel-spacing-unit;
}

.gel-type-demo__class-html {
    margin-bottom: 0;
}

/**
 * 1. Remove an text-tranforms which might be missing with the look and feel
 */
 .gel-type-demo__sample-scale {
    text-transform: none; /* [1] */
}

.gel-type-demo__settings {
    color: $gel-color--orange;
}

/**
 * Remove any units from a given value
 */
@function strip-unit($num) {
    @if $num == null {
        @return 0;
    }

    @return $num / ($num * 0 + 1);
}

/**
 * Get the type settings for the specified group
 */
@function get-type-settings($group, $type-values) {
    @if map-has-key(map-get($type-values, $group), 'font-size') {
        $font-size: strip-unit(map-get(map-get($type-values, $group), 'font-size')) !global;
    }

    @if map-has-key(map-get($type-values, $group), 'line-height') {
        $line-height: strip-unit(map-get(map-get($type-values, $group), 'line-height')) !global;
    }

    @return '#{$font-size}/#{$line-height}';
}

/**
 * Output the type settings for each font-class for each group
 */
@each $type-class, $type-values in $gel-type-settings {
    [data-type-class="#{$type-class}"] .gel-type-demo__settings {
        &:after {
            content: get-type-settings('group-a', $type-values);
        }

        @if map-has-key($type-values, 'group-b') {
            @include mq($from: gel-bp-type-b) {
                &:after {
                    content: get-type-settings('group-b', $type-values);
                }
            }
        }

       @include mq($from: gel-bp-type-c) {
            @if map-has-key($type-values, 'group-c') {
                &:after {
                    content: get-type-settings('group-c', $type-values);
                }
            }

            @if map-has-key($type-values, 'group-d') {
                .no-touch &:after {
                    content: get-type-settings('group-d', $type-values);
                }
            }
        }
    }
}
